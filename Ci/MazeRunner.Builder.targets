<?xml version="1.0" encoding="utf-8"?>

<!-- to test stuff out on your localdev try these                                                -->
<!--                                                                                             -->
<!--   - to build with an explicit version specified in the cli:                                 -->
<!--                                                                                             -->
<!--        # *sh (bash, zsh, ...)                                                               -->
<!--        dotnet   msbuild                                     \                               -->
<!--            "Ci/MazeRunner.Builder.targets"                  \                               -->
<!--            -m:1   -p:MazeRunner_Version_Full=9.0.x                                          -->
<!--                                                                                             -->
<!--        # on windows powershell                                                              -->
<!--        dotnet   msbuild                                     ^                               -->
<!--            Ci\MazeRunner.Builder.targets                    ^                               -->
<!--            /m:1   /p:MazeRunner_Version_Full=9.0.x                                          -->
<!--                                                                                             -->
<!--   - (use with caution - only use in localdev for testing) to calculate the proper version,  -->
<!--      build, tag and create a new release in github with changelog autogenerated             -->
<!--                                                                                             -->
<!--       dotnet                                                                \               -->
<!--                msbuild                                                      \               -->
<!--                Ci/MazeRunner.Builder.targets                                \               -->
<!--                -m:1                                                         \               -->
<!--                -p:MazeRunner_Source_Branch=<main / develop / ...>           \               -->
<!--                -p:MazeRunner_Repository_Path=dsidirop/MazeRunner            \               -->
<!--                -p:MazeRunner_Github_Access_Token=XYZ                        \               -->
<!--                -p:MazeRunner_Should_Tag_And_Release=True                                    -->
<!--                                                                                             -->
<Project DefaultTargets="BuildProjects">

    <PropertyGroup>
        <Newline>%0A</Newline>

        <!-- @formatter:off -->
        <Configuration Condition="           '$(Configuration)'           == '' ">Release</Configuration>
        <Should_Skip_Tests Condition="       '$(Should_Skip_Tests)'       == '' ">false</Should_Skip_Tests>
        <Should_Skip_MacCatalyst Condition=" '$(Should_Skip_MacCatalyst)' == '' ">false</Should_Skip_MacCatalyst>

        <MazeRunner_Script_FolderPath>$(MSBuildThisFileDirectory)</MazeRunner_Script_FolderPath>

        <MazeRunner_RootDirectory_Folderpath       >$([System.IO.Path]::Combine(     '$(MazeRunner_Script_FolderPath)',        '..'   ))</MazeRunner_RootDirectory_Folderpath>
        <MazeRunner_RootDirectory_Folderpath       >$([System.IO.Path]::GetFullPath( '$(MazeRunner_RootDirectory_Folderpath)'         ))</MazeRunner_RootDirectory_Folderpath>
        <MazeRunner_SourceRootDirectory_Folderpath >$([System.IO.Path]::Combine(     '$(MazeRunner_RootDirectory_Folderpath)', 'Code' ))</MazeRunner_SourceRootDirectory_Folderpath>
        <!-- @formatter:on -->

        <PackageOutputPath Condition=" '$(PackageOutputPath)' == '' ">$([System.IO.Path]::Combine($(MazeRunner_RootDirectory_Folderpath), `Artifacts/`))</PackageOutputPath>
        <PackageOutputPath>$([System.IO.Path]::GetFullPath( '$(PackageOutputPath)' ))</PackageOutputPath>

        <MazeRunner_Dependency_Tracker_Server_Url Condition=" '$(MazeRunner_Dependency_Tracker_Server_Url)' == '' ">https://dep-tracker.foobar.com/api/api/v1/bom</MazeRunner_Dependency_Tracker_Server_Url>

        <MazeRunner_Test_Results_Folderpath Condition=" '$(MazeRunner_Test_Results_Folderpath)' == '' ">$([System.IO.Path]::Combine($(MazeRunner_RootDirectory_Folderpath), `TestResults`))</MazeRunner_Test_Results_Folderpath>

        <!-- https://docs.gitlab.com/ee/ci/variables/predefined_variables.html                                                                             -->
        <!-- https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables                                             -->
        <!-- https://learn.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml&WT.mc_id=DT-MVP-5003978#system-variables -->
        <Is_CI_Build Condition="     '$(TF_BUILD)' == 'true'  or  '$(GITHUB_ACTIONS)' == 'true'  or  '$(GITLAB_CI)' == 'true' ">true</Is_CI_Build>
        <Is_Core_Branch Condition="  '$(MazeRunner_Source_Branch)' == 'refs/heads/main'  or  '$(MazeRunner_Source_Branch)' == 'refs/heads/master'  or  '$(MazeRunner_Source_Branch)' == 'refs/heads/develop' ">true</Is_Core_Branch>
        <Is_Pull_Request Condition=" '$(MazeRunner_Source_Branch.StartsWith(refs/pull))' == 'true'  and  '$(MazeRunner_Source_Branch.EndsWith(/merge))' == 'true' ">true</Is_Pull_Request>

        <MazeRunner_Source_Branch Condition="           '$(MazeRunner_Source_Branch)'          == '' ">$(BUILD_SOURCEBRANCH)</MazeRunner_Source_Branch>
        <MazeRunner_Repository_Path Condition="         '$(MazeRunner_Repository_Path)'        == '' ">$(BUILD_REPOSITORY_NAME)</MazeRunner_Repository_Path>

        <MazeRunner_Should_Tag_And_Release Condition="           '$(MazeRunner_Should_Tag_And_Release)'  == ''  and  ( '$(Is_Core_Branch)' == 'true'                                     ) ">True</MazeRunner_Should_Tag_And_Release>
        <MazeRunner_Should_Generate_Sbom Condition="             '$(MazeRunner_Should_Generate_Sbom)'    == ''  and  ( '$(Is_Core_Branch)' == 'true'  or  '$(Is_Pull_Request)' == 'true' ) ">True</MazeRunner_Should_Generate_Sbom>

        <!-- @formatter:off -->
        <MazeRunner_SolutionFile                 >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.slnx`                                                                  ))</MazeRunner_SolutionFile>
        
        <MazeRunner_ProjectFile_Cli              >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.Cli`,                      `MazeRunner.Cli.csproj`                     ))</MazeRunner_ProjectFile_Cli>
        <MazeRunner_ProjectFile_TestbedUI        >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.TestbedUI`,                `MazeRunner.TestbedUI.csproj`               ))</MazeRunner_ProjectFile_TestbedUI>

        <MazeRunner_ProjectFile_Mazes            >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.Mazes`,                    `MazeRunner.Mazes.csproj`                   ))</MazeRunner_ProjectFile_Mazes>
        <MazeRunner_ProjectFile_Utils            >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.Utils`,                    `MazeRunner.Utils.csproj`                   ))</MazeRunner_ProjectFile_Utils>
        <MazeRunner_ProjectFile_EnginesFactory   >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.EnginesFactory`,           `MazeRunner.EnginesFactory.csproj`          ))</MazeRunner_ProjectFile_EnginesFactory>
        <MazeRunner_ProjectFile_SimpleMazeRunner >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.Engine.SimpleMazeRunner`,  `MazeRunner.Engine.SimpleMazeRunner.csproj` ))</MazeRunner_ProjectFile_SimpleMazeRunner>

        <MazeRunner_ProjectFile_Tests            >$([System.IO.Path]::Combine( $(MazeRunner_SourceRootDirectory_Folderpath),  `MazeRunner.Tests`,                    `MazeRunner.Tests.csproj`                   ))</MazeRunner_ProjectFile_Tests>
        <!-- @formatter:on -->
    </PropertyGroup>

    <Target Name="PrintConfiguration">
        <Message Importance="High" Text="** Configuration            = '$(Configuration)'"/>
        <Message Importance="High" Text="** PackageOutputPath        = '$(PackageOutputPath)'"/>

        <Message Importance="High" Text="** MazeRunner_SolutionFile             = '$(MazeRunner_SolutionFile)'"/>
        <Message Importance="High" Text="** MazeRunner_Source_Branch            = '$(MazeRunner_Source_Branch)'"/>
        <Message Importance="High" Text="** MazeRunner_Repository_Path          = '$(MazeRunner_Repository_Path)'"/>
        <Message Importance="High" Text="** MazeRunner_Test_Results_Folderpath  = '$(MazeRunner_Test_Results_Folderpath)'"/>

        <!-- <Message Importance="High" Text="** MazeRunner_Github_Access_Token   ='$(MazeRunner_Github_Access_Token)'"/> dont -->
    </Target>

    <!-- VERSION -->
    <Target Name="DeduceVersion" DependsOnTargets="PrintConfiguration">

        <PropertyGroup>
            <MazeRunner_Version_Major Condition=" '$(MazeRunner_Version_Major)' == '' ">1</MazeRunner_Version_Major>

            <MazeRunner_Version_Script_Filepath Condition="   '$(MazeRunner_Version_Script_Filepath)'  == '' ">$([System.IO.Path]::Combine($(MazeRunner_Script_FolderPath), `MazeRunner.Version.sh`))</MazeRunner_Version_Script_Filepath>
            <MazeRunner_Version_Details_Filepath Condition="  '$(MazeRunner_Version_Details_Filepath)' == '' ">$([System.IO.Path]::Combine($(PackageOutputPath), `version.txt`))</MazeRunner_Version_Details_Filepath>

            <MazeRunner_Master_Branch_Name Condition="  '$(MazeRunner_Master_Branch_Name)'  == '' ">master</MazeRunner_Master_Branch_Name>
            <MazeRunner_Develop_Branch_Name Condition=" '$(MazeRunner_Develop_Branch_Name)' == '' ">develop</MazeRunner_Develop_Branch_Name>

            <!-- @formatter:off -->
            <_MazeRunner_Version_Script_Parameters>$(_MazeRunner_Version_Script_Parameters)   -o                 '$(MazeRunner_Version_Details_Filepath)' </_MazeRunner_Version_Script_Parameters>
            <_MazeRunner_Version_Script_Parameters>$(_MazeRunner_Version_Script_Parameters)   --major            '$(MazeRunner_Version_Major)'            </_MazeRunner_Version_Script_Parameters>
            <_MazeRunner_Version_Script_Parameters>$(_MazeRunner_Version_Script_Parameters)   --master-branch    '$(MazeRunner_Master_Branch_Name)'       </_MazeRunner_Version_Script_Parameters>
            <_MazeRunner_Version_Script_Parameters>$(_MazeRunner_Version_Script_Parameters)   --develop-branch   '$(MazeRunner_Develop_Branch_Name)'      </_MazeRunner_Version_Script_Parameters>
            <!-- @formatter:on  -->
        </PropertyGroup>

        <Message Importance="High" Text="  bash '$(MazeRunner_Version_Script_Filepath)' $(_MazeRunner_Version_Script_Parameters)  "/>

        <!-- its useful to allow specifying the version through the command line for testing and development purposes on localdev -->
        <Exec Condition=" '$(MazeRunner_Version_Full)' == '' "
              EchoOff="true"
              Command=" bash '$(MazeRunner_Version_Script_Filepath)' $(_MazeRunner_Version_Script_Parameters) "
              ConsoleToMSBuild="true"
              WorkingDirectory="$(MazeRunner_RootDirectory_Folderpath)">
            <Output TaskParameter="ConsoleOutput" PropertyName="MazeRunner_Version_Full"/>
        </Exec>

        <PropertyGroup>
            <!-- @formatter:off -->
            <MazeRunner_Version_Base    >$([System.Text.RegularExpressions.Regex]::Replace( "$(MazeRunner_Version_Full)", "^(\d*)\.(\d*)\.(\d*)-?([^.]*).?(\d*)?$", "$1.$2.$3" ))</MazeRunner_Version_Base>
            <MazeRunner_Version_BuildId >$([System.Text.RegularExpressions.Regex]::Replace( "$(MazeRunner_Version_Full)", "^(\d*)\.(\d*)\.(\d*)-?([^.]*).?(\d*)?$", "$5"       ))</MazeRunner_Version_BuildId>
            <MazeRunner_Version_BuildId Condition=" '$(MazeRunner_Version_BuildId)' == '' ">0</MazeRunner_Version_BuildId>
            <!-- @formatter:on -->
        </PropertyGroup>

        <CreateProperty Value="$(MazeRunner_Version_Base)">
            <Output PropertyName="MazeRunner_Version_Full" TaskParameter="Value"/>
        </CreateProperty>

        <!-- https://learn.microsoft.com/en-us/azure/devops/pipelines/scripts/logging-commands?view=azure-devops&tabs=bash#updatebuildnumber-override-the-automatically-generated-build-number -->
        <!--                                                                                                                                                                                   -->
        <!-- this causes the azure pipelines to update the build number                                                                                                                        -->
        <Message Importance="High" Text="##vso[build.updatebuildnumber]$(MazeRunner_Version_Full)"/>
    </Target>

    <!-- BUILD -->
    <Target Name="BuildProjects" DependsOnTargets="DeduceVersion">
        <Error Text="'MazeRunner_Version_Full' has to be set. Please call this script again with the argument '/p:MazeRunner_Version_Full=...'"
               Condition=" '$(MazeRunner_Version_Full)' == '' "/>

        <PropertyGroup>
            <_MazeRunner_Build_Parameters>$(_MazeRunner_Build_Parameters)Version=$(MazeRunner_Version_Full);</_MazeRunner_Build_Parameters>
            <_MazeRunner_Build_Parameters>$(_MazeRunner_Build_Parameters)Configuration=$(Configuration);</_MazeRunner_Build_Parameters>
            <_MazeRunner_Build_Parameters>$(_MazeRunner_Build_Parameters)PackageOutputPath=$(PackageOutputPath);</_MazeRunner_Build_Parameters>
            <_MazeRunner_Build_Parameters>$(_MazeRunner_Build_Parameters)ContinuousIntegrationBuild=$(Is_CI_Build);</_MazeRunner_Build_Parameters>
            
            <!-- todo  use MazeRunner_RootDirectory_Folderpath in order to set SourceRoot in each and every .csproj -->
            <_MazeRunner_Build_Parameters>$(_MazeRunner_Build_Parameters)MazeRunner_SourceRootDirectory_Folderpath=$(MazeRunner_SourceRootDirectory_Folderpath);</_MazeRunner_Build_Parameters>
        </PropertyGroup>

        <MSBuild Targets="Restore;Rebuild"
                 Projects="$(MazeRunner_SolutionFile)"
                 Properties="$(_MazeRunner_Build_Parameters)" />
    </Target>

    <!-- TESTS -->
    <Target Name="RunTests"
            Condition=" '$(Should_Skip_Tests)' == 'false' "
            AfterTargets="BuildProjects">

        <PropertyGroup>
            <!-- @formatter:off -->
            <_DotnetTestCommand> </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand) dotnet  test                                                                 </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    &quot;$(MazeRunner_ProjectFile_Tests)&quot;                               </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    --logger            &quot;trx;LogFileName=TEST-MazeRunner.Tests.xml&quot; </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    --verbosity         &quot;normal&quot;                                    </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    --configuration     &quot;$(Configuration)&quot;                          </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    --results-directory &quot;$(MazeRunner_Test_Results_Folderpath)&quot;     </_DotnetTestCommand>
            <_DotnetTestCommand>$(_DotnetTestCommand)    -m:1                                                                      </_DotnetTestCommand>
            <!-- @formatter:on -->
        </PropertyGroup>

        <Exec Command=" bash  -c  '$(_DotnetTestCommand)' "
              ConsoleToMSBuild="true"
              WorkingDirectory="$(MazeRunner_RootDirectory_Folderpath)"/>

        <ItemGroup>
            <TestReportFiles Include="$(MazeRunner_Test_Results_Folderpath)\**\*.*;"/>
        </ItemGroup>

        <Message Importance="High" Text="**** Test-Suite Report Files (@(TestReportFiles->Count()) files in total):  "/>
        <Message Importance="High" Text="****                                                                        "/>
        <Message Importance="High" Text="****     '%(TestReportFiles.FullPath)'                                      "/>
        <Message Importance="High" Text="****                                                                        "/>
    </Target>

    <Target Name="ConsolePrintAllGeneratedArtifacts" AfterTargets="RunTests">
        <ItemGroup>
            <PackageFiles Include="$(PackageOutputPath)\**\*.*;"/>
        </ItemGroup>

        <Message Importance="High" Text="**** Generated Artifacts:                      "/>
        <Message Importance="High" Text="****                                           "/>
        <Message Importance="High" Text="****     %(PackageFiles.FullPath)              "/>
        <Message Importance="High" Text="****                                           "/>
    </Target>

    <!-- GITHUB RELEASE -->
    <Target Name="CreateGithubReleaseWithTag"
            Condition=" '$(MazeRunner_Should_Tag_And_Release)' == 'True' "
            AfterTargets="RunTests">

        <Error Condition=" '$(MazeRunner_Version_Base)'        == '' " Text="'MazeRunner_Version_Base' has to be set. Please call this script again with the argument '/p:MazeRunner_Version_Base=...'"/>
        <Error Condition=" '$(MazeRunner_Source_Branch)'       == '' " Text="'MazeRunner_Source_Branch' has to be set. Please call this script again with the argument '/p:MazeRunner_Source_Branch=...'"/>
        <Error Condition=" '$(MazeRunner_Repository_Path)'     == '' " Text="'MazeRunner_Repository_Path' has to be set. Please call this script again with the argument '/p:MazeRunner_Repository_Path=...'"/>
        <Error Condition=" '$(MazeRunner_Github_Access_Token)' == '' " Text="'MazeRunner_Github_Access_Token' has to be set. Please call this script again with the argument '/p:MazeRunner_Github_Access_Token=...'"/>

        <PropertyGroup>
            <MazeRunner_Create_Github_Release_Script_Filepath Condition=" '$(MazeRunner_Create_Github_Release_Script_Filepath)' == '' ">$([System.IO.Path]::Combine($(MazeRunner_Script_FolderPath), `MazeRunner.CreateNewReleaseInGithub.sh`))</MazeRunner_Create_Github_Release_Script_Filepath>

            <_MazeRunner_Create_Github_Release_Script_Parameters>$(_MazeRunner_Create_Github_Release_Script_Parameters) --log</_MazeRunner_Create_Github_Release_Script_Parameters>
            <_MazeRunner_Create_Github_Release_Script_Parameters>$(_MazeRunner_Create_Github_Release_Script_Parameters) --git-branch '$(MazeRunner_Source_Branch)'</_MazeRunner_Create_Github_Release_Script_Parameters>
            <_MazeRunner_Create_Github_Release_Script_Parameters>$(_MazeRunner_Create_Github_Release_Script_Parameters) --tag-version '$(MazeRunner_Version_Base)'</_MazeRunner_Create_Github_Release_Script_Parameters>
            <_MazeRunner_Create_Github_Release_Script_Parameters>$(_MazeRunner_Create_Github_Release_Script_Parameters) --access-token '$(MazeRunner_Github_Access_Token)'</_MazeRunner_Create_Github_Release_Script_Parameters>
            <_MazeRunner_Create_Github_Release_Script_Parameters>$(_MazeRunner_Create_Github_Release_Script_Parameters) --repository-path '$(MazeRunner_Repository_Path)'</_MazeRunner_Create_Github_Release_Script_Parameters>
        </PropertyGroup>

        <Message Importance="High" Text="   bash    '$(MazeRunner_Create_Github_Release_Script_Filepath)'    $(_MazeRunner_Create_Github_Release_Script_Parameters) "/>

        <Exec Command="   bash    '$(MazeRunner_Create_Github_Release_Script_Filepath)'   $(_MazeRunner_Create_Github_Release_Script_Parameters) "
              EchoOff="true"
              ConsoleToMSBuild="true"
              WorkingDirectory="$(MazeRunner_RootDirectory_Folderpath)"/>
    </Target>

    <!-- GENERATE + UPLOAD SBOM -->
    <Target Name="GenerateSBOM"
            Condition=" '$(MazeRunner_Should_Generate_Sbom)' == 'True' "
            AfterTargets="BuildProjects">

        <Error Condition=" '$(PackageOutputPath)'                                           == '' " Text="'PackageOutputPath' has to be set. Please call this script again with the argument '/p:PackageOutputPath=...'"/>
        <Error Condition=" '$(MazeRunner_Version_Full)'                                     == '' " Text="'MazeRunner_Version_Full' has to be set. Please call this script again with the argument '/p:MazeRunner_Version_Full=...'"/>
        <!--        <Error Condition=" '$(MazeRunner_Dependency_Tracker_Api_Key_File_Path)'             == '' " Text="'MazeRunner_Dependency_Tracker_Api_Key_File_Path' has to be set. Please call this script again with the argument '/p:MazeRunner_Dependency_Tracker_Api_Key_File_Path=...'"/>-->
        <!--        <Error Condition=" '$(MazeRunner_Dependency_Tracker_Private_Signing_Key_File_Path)' == '' " Text="'MazeRunner_Dependency_Tracker_Private_Signing_Key_File_Path' has to be set. Please call this script again with the argument '/p:MazeRunner_Dependency_Tracker_Private_Signing_Key_File_Path=...'"/>-->

        <Error Condition=" '$(MazeRunner_ProjectFile_Cli)'                == '' " Text="'MazeRunner_ProjectFile_Cli' has to be set. Please call this script again with the argument '/p:MazeRunner_ProjectFile_Cli=...'"/>
        <Error Condition=" '$(MazeRunner_ProjectFile_SimpleMazeRunner)'   == '' " Text="'MazeRunner_ProjectFile_SimpleMazeRunner' has to be set. Please call this script again with the argument '/p:MazeRunner_ProjectFile_SimpleMazeRunner=...'"/>
        <Error Condition=" '$(MazeRunner_ProjectFile_EnginesFactory)'     == '' " Text="'MazeRunner_ProjectFile_EnginesFactory' has to be set. Please call this script again with the argument '/p:MazeRunner_ProjectFile_EnginesFactory=...'"/>
        <Error Condition=" '$(MazeRunner_ProjectFile_Mazes)'              == '' " Text="'MazeRunner_ProjectFile_Mazes' has to be set. Please call this script again with the argument '/p:MazeRunner_ProjectFile_Mazes=...'"/>
        <Error Condition=" '$(MazeRunner_ProjectFile_Utils)'              == '' " Text="'MazeRunner_ProjectFile_Utils' has to be set. Please call this script again with the argument '/p:MazeRunner_ProjectFile_Utils=...'"/>

        <PropertyGroup>
            <!-- @formatter:off -->
            <_MazeRunner_ProjectFile_Cli_Name             >$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_Cli)')              .Replace('.csproj', ''))</_MazeRunner_ProjectFile_Cli_Name>
            <_MazeRunner_ProjectFile_TestbedUI_Name       >$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_TestbedUI)')        .Replace('.csproj', ''))</_MazeRunner_ProjectFile_TestbedUI_Name>

            <_MazeRunner_ProjectFile_Mazes_Name           >$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_Mazes)')            .Replace('.csproj', ''))</_MazeRunner_ProjectFile_Mazes_Name>
            <_MazeRunner_ProjectFile_Utils_Name           >$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_Utils)')            .Replace('.csproj', ''))</_MazeRunner_ProjectFile_Utils_Name>
            <_MazeRunner_ProjectFile_EnginesFactory_Name  >$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_EnginesFactory)')   .Replace('.csproj', ''))</_MazeRunner_ProjectFile_EnginesFactory_Name>
            <_MazeRunner_ProjectFile_SimpleMazeRunner_Name>$([System.IO.Path]::GetFileName( '$(MazeRunner_ProjectFile_SimpleMazeRunner)') .Replace('.csproj', ''))</_MazeRunner_ProjectFile_SimpleMazeRunner_Name>

            <_MazeRunner_Sbom_Script_Parameters> </_MazeRunner_Sbom_Script_Parameters>
            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --skip-uploading                                                                                                    </_MazeRunner_Sbom_Script_Parameters>
            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --project-version                        &quot;$(MazeRunner_Version_Full)&quot;                                     </_MazeRunner_Sbom_Script_Parameters>
            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --output-directory-path                  &quot;$(PackageOutputPath)&quot;                                           </_MazeRunner_Sbom_Script_Parameters>
            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --sbom-signing-key-file-path             &quot;$(MazeRunner_Dependency_Tracker_Private_Signing_Key_File_Path)&quot; </_MazeRunner_Sbom_Script_Parameters>

            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --dependency-tracker-url                 &quot;$(MazeRunner_Dependency_Tracker_Server_Url)&quot;                    </_MazeRunner_Sbom_Script_Parameters>
            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --dependency-tracker-api-key-file-path   &quot;$(MazeRunner_Dependency_Tracker_Api_Key_File_Path)&quot;             </_MazeRunner_Sbom_Script_Parameters>

            <_MazeRunner_Sbom_Script_Parameters>$(_MazeRunner_Sbom_Script_Parameters) --csproj-classifier &quot;Library&quot;</_MazeRunner_Sbom_Script_Parameters>

            <_Logical_And>&amp;&amp;</_Logical_And>

            <_MazeRunner_Sbom_Scriptlet> </_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  chmod +x           ./MazeRunner.GenerateSignAndUploadSbom.sh</_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_TestbedUI)&quot;           --project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;        --output-sbom-file-name &quot;sbom.mazerunner.winformsui.xml&quot;       --parent-project-name &quot;[Group::MazeRunner]&quot;</_MazeRunner_Sbom_Scriptlet>

            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_Cli)&quot;                 --project-name &quot;$(_MazeRunner_ProjectFile_Cli_Name)&quot;              --output-sbom-file-name &quot;sbom.mazerunner.cli.xml&quot;              --parent-project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;  --parent-project-version &quot;$(MazeRunner_Version_Full)&quot; --skip-installing-cyclonedx-cli-tool --skip-installing-cyclonedx-dotnet-extension</_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_Mazes)&quot;               --project-name &quot;$(_MazeRunner_ProjectFile_Mazes_Name)&quot;            --output-sbom-file-name &quot;sbom.mazerunner.mazes.xml&quot;            --parent-project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;  --parent-project-version &quot;$(MazeRunner_Version_Full)&quot; --skip-installing-cyclonedx-cli-tool --skip-installing-cyclonedx-dotnet-extension</_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_Utils)&quot;               --project-name &quot;$(_MazeRunner_ProjectFile_Utils_Name)&quot;            --output-sbom-file-name &quot;sbom.mazerunner.utils.xml&quot;            --parent-project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;  --parent-project-version &quot;$(MazeRunner_Version_Full)&quot; --skip-installing-cyclonedx-cli-tool --skip-installing-cyclonedx-dotnet-extension</_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_EnginesFactory)&quot;      --project-name &quot;$(_MazeRunner_ProjectFile_EnginesFactory_Name)&quot;   --output-sbom-file-name &quot;sbom.mazerunner.enginesfactory.xml&quot;   --parent-project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;  --parent-project-version &quot;$(MazeRunner_Version_Full)&quot; --skip-installing-cyclonedx-cli-tool --skip-installing-cyclonedx-dotnet-extension</_MazeRunner_Sbom_Scriptlet>
            <_MazeRunner_Sbom_Scriptlet>$(_MazeRunner_Sbom_Scriptlet)  $(_Logical_And)    ./MazeRunner.GenerateSignAndUploadSbom.sh     $(_MazeRunner_Sbom_Script_Parameters)    --csproj-file-path &quot;$(MazeRunner_ProjectFile_SimpleMazeRunner)&quot;    --project-name &quot;$(_MazeRunner_ProjectFile_SimpleMazeRunner_Name)&quot; --output-sbom-file-name &quot;sbom.mazerunner.simplemazerunner.xml&quot; --parent-project-name &quot;$(_MazeRunner_ProjectFile_TestbedUI_Name)&quot;  --parent-project-version &quot;$(MazeRunner_Version_Full)&quot; --skip-installing-cyclonedx-cli-tool --skip-installing-cyclonedx-dotnet-extension</_MazeRunner_Sbom_Scriptlet>
            <!-- @formatter:on -->
        </PropertyGroup>

        <!-- 1  we ignore suppress any errors and continue because sometimes the sbom mechanism spazzes out due to intermittent errors when installing cli tooling   go figure -->
        <!-- 2  also notice that we are forced to target /api/api/v1/bom instead of /api/v1/bom due to an inherent misconfiguration of laerdal's dependency-track server       -->
        <!-- 3  https://docs.dependencytrack.org/usage/cicd/#large-payloads                                                                                                    -->
        <Message Importance="High" Text="** Generating, Singing and Uploading SBOMs:"/>
        <Exec Timeout="60000"
              Command=" bash -c '$(_MazeRunner_Sbom_Scriptlet)' "
              ContinueOnError="WarnAndContinue"
              ConsoleToMSBuild="true"
              WorkingDirectory="$(MazeRunner_Script_FolderPath)"/>
    </Target>

</Project>
